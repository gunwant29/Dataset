def is_safe(queens, row, col):
    for r in range(row):
        c = queens[r]
        if c == col or abs(c - col) == abs(r - row):
            return False
    return True

def solve_n_queens(n):
    queens = [-1] * n

    def backtrack(row):
        if row == n:
            return True
        for col in range(n):
            if is_safe(queens, row, col):
                queens[row] = col
                if backtrack(row + 1):
                    return True
        return False

    if backtrack(0):
        print("solution:")
        for i in range(n):
            row = ["."] * n
            row[queens[i]] = "Q"
            print(" ".join(row))
    else:
        print("No solution found.")

solve_n_queens(4)